
NAME: Nattapat Juthaprachakul, STUDENT ID:301350117

QUESTIONS:
In a text file answers.txt, answer these questions:

1.In the WikipediaPopular class, it would be much more interesting to find the page that is most popular,
  not just the view count (as we did with Spark).
  What would be necessary to modify your class to do this? (You don't have to actually implement it.)
        ANS: We just change the code at .map() in the instruction 4 (create an RDD of key-value pairs)
        from (key: datetime, value: number of views) to (key: datetime, tuple of values: number of views and pagename).

2. An RDD has many methods: it can do many more useful tricks than were at hand with MapReduce.
   Write a sentence or two to explain the difference between .map and .flatMap. Which is more like the MapReduce concept of mapping?
        ANS: According to documentation, map returns a new RDD by applying given function to each element of the RDD.
        Function in map returns only one item( returning all elements in single array).
        For flatMap, it is similar to map except the output is flattened( returning elements in arrays of array).
        Since output of mapping in MapReduce returns pair of element such as [('A',1),('B',1), and ('A',1)], a map function in MapReduce uses the flatMap function.

3. Do the same for .reduce and .reduceByKey. Which is more like the MapReduce concept of reducing?
        ANS: The .reduce method reduces all elements in the RDD to one result while .reduceByKey reduces the values over each key.
        MapReduce uses .reduceByKey since in MapReduce everything needs to be key-value pairs while in Spark it is optional.

4. When finding popular Wikipedia pages, the maximum number of page views is certainly unique, but the most popular page might be a tie.
   What would your improved Python implementation do if there were two pages with the same highest number of page views in an hour?
   What would be necessary to make your code find all of the pages views the maximum number of times? (Again, you don't have to actually implement this.)
        ANS: We just simply set the condition to check that if there are pages that have equal maximum number of views, we just output all of them without randomly ignoring one page over others.
